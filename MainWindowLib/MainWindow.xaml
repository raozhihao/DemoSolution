<mah:MetroWindow x:Class="MainWindowLib.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:dp="clr-namespace:GeneralTool.CoreLibrary.WPFHelper.Extensions;assembly=GeneralTool.CoreLibrary"
                 xmlns:views="clr-namespace:MainWindowLib.Views"
                 xmlns:userHelper="clr-namespace:MainWindowLib.DependecyHelpers"
                 xmlns:vm="clr-namespace:MainWindowLib.ViewModels"
                 TitleCharacterCasing="Normal"
                 xmlns:local="clr-namespace:MainWindowLib"
                 WindowState="Maximized"
                 mc:Ignorable="d"
                 Title="{dp:LangBind DefaultText=通用UI框架,LangKey=MainTitle}"
                 Height="720"
                 Width="1280"
                 MinHeight="720"
                 MinWidth="1280"
                 x:Name="window"
                 IconBitmapScalingMode="HighQuality"
                 userHelper:MetroHamburgerMenuDependecys.Main="{Binding ElementName=window}"
                 Closing="{dp:EventBinding EventHandlerName=MainClosing}">

    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <Image Source="Asserts/UI.ico"
                   Margin="5"
                   RenderOptions.BitmapScalingMode="HighQuality" />
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>

    <mah:MetroWindow.Resources>
        <!--  This is the template for the option menu item  -->
        <ResourceDictionary>

            <!--  This is the template for the option menu item  -->
            <DataTemplate x:Key="MenuItemTemplate"
                          DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid Height="48"
                      Visibility="{Binding Path=Icon.Visibility,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                      Cursor="Hand">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl Grid.Column="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Content="{Binding Icon}"
                                    Focusable="False"
                                    FontSize="20"
                                    IsTabStop="False"
                                    x:Name="Icon"
                                    Background="Black"
                                    ToolTip="{Binding Label}" />
                    <TextBlock Grid.Column="1"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}"
                               x:Name="IconTxt" />
                </Grid>

            </DataTemplate>

            <Style x:Key="CommandLabel"
                   TargetType="Label"
                   BasedOn="{StaticResource MahApps.Styles.Control.WindowCommands}">
                <Setter Property="FontFamily"
                        Value="{StaticResource DefaultIconFont}" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="FontSize"
                        Value="20" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Style>
        </ResourceDictionary>
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Label Content="{StaticResource ClearCache}"
                   ToolTip="{dp:LangBind DefaultText=清除缓存,LangKey=ClearLogToolTip}"
                   Style="{StaticResource CommandLabel}"
                   MouseDown="{dp:EventBinding ClearLogsMouseDown,RoutedEvent={x:Static UIElement.MouseDownEvent}}" />

            <Label Content="{StaticResource Theme}"
                   ToolTip="{dp:LangBind DefaultText=主题颜色,LangKey=ThemeToopTip}"
                   Style="{StaticResource CommandLabel}"
                   MouseDown="{dp:EventBinding ThemeMouseDown}" />

            <mah:SplitButton ItemsSource="{Binding LangList}"
                             userHelper:SplitButtonDependecy.ClickOpen="True"
                             SelectedIndex="{Binding LangSelectedIndex}"
                             SelectionChanged="{dp:EventBinding LangSelectionChanged}"
                             Cursor="Hand" />

        </mah:WindowCommands>

    </mah:MetroWindow.RightWindowCommands>

    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl>
            <mah:Flyout Header="{dp:LangBind DefaultText=主题颜色,LangKey=ThemeHeader}"
                        Theme="Adapt"
                        IsOpen="{Binding ThemeIsOpen}"
                        Position="Right">
                <!--The content goes here-->
                <views:ThemeView DataContext="{Binding ThemeViewModel}"
                                 VerticalAlignment="Top" />
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="7*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="3*" />
        </Grid.RowDefinitions>

        <TextBlock Text="{dp:LangBind DefaultText=菜单栏,LangKey=MenuLabel}"
                   Visibility="Collapsed"
                   x:Name="MenuLabel" />
        <!--ConentThis-->
        <mah:HamburgerMenu x:Name="HamburgerMenuControl"
                           HamburgerWidth="48"
                           DisplayMode="CompactInline"
                           IsPaneOpen="False"
                           ItemInvoked="{dp:EventBinding HamburgerItemInvoked}"
                           ItemTemplate="{StaticResource MenuItemTemplate}"
                           OptionsItemTemplate="{StaticResource MenuItemTemplate}"
                           SelectedIndex="{Binding MainSelectedIndex}">

            <!--  Header  -->
            <mah:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <DataTemplate>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Foreground="White"
                               Text="{dp:LangBind DefaultText=菜单,LangKey=MenuLabel}" />
                </DataTemplate>
            </mah:HamburgerMenu.HamburgerMenuHeaderTemplate>

            <!--  Items  -->
            <mah:HamburgerMenu.ItemsSource>
                <mah:HamburgerMenuItemCollection>

                    <mah:HamburgerMenuIconItem Label="{dp:LangBind DefaultText=设置,LangKey=MenuSettingLabel}"
                                               TargetPageType="{x:Type UserControl}"
                                               IsVisible="True">
                        <mah:HamburgerMenuIconItem.Icon>
                            <TextBlock Text="{StaticResource Setting}"
                                       x:Name="tt"
                                       FontFamily="{StaticResource DefaultIconFont}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />

                        </mah:HamburgerMenuIconItem.Icon>
                        <mah:HamburgerMenuIconItem.Tag>
                            <views:RunSettingView userHelper:MetroHamburgerMenuDependecys.ViewDataContext="{x:Type vm:SettingViewModel}"
                                                  x:Name="RunSettingView"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>

                    <mah:HamburgerMenuIconItem Label="{dp:LangBind DefaultText=接口,LangKey=MenuInterfaceLabel}"
                                               TargetPageType="{x:Type UserControl}">
                        <mah:HamburgerMenuIconItem.Icon>
                            <TextBlock Text="{StaticResource InterfacePower}"
                                       FontFamily="{StaticResource DefaultIconFont}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding ElementName=RunSettingView,Path=DataContext.ControlVisible,Converter={StaticResource BooleanToVisibilityConverter}}" />

                        </mah:HamburgerMenuIconItem.Icon>

                        <mah:HamburgerMenuIconItem.Tag>
                            <views:InterfacesView userHelper:MetroHamburgerMenuDependecys.ViewDataContext="{x:Type vm:InterfacesViewModel}" />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>

                    <mah:HamburgerMenuIconItem Label="{dp:LangBind DefaultText=Picture,LangKey=MenuPictureLabel}"
                                               TargetPageType="{x:Type UserControl}">
                        <mah:HamburgerMenuIconItem.Icon>
                            <TextBlock Text="{StaticResource Picture}"
                                       FontFamily="{StaticResource DefaultIconFont}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding ElementName=RunSettingView,Path=DataContext.ControlVisible,Converter={StaticResource BooleanToVisibilityConverter}}" />

                        </mah:HamburgerMenuIconItem.Icon>

                        <mah:HamburgerMenuIconItem.Tag>
                            <views:ImageView userHelper:MetroHamburgerMenuDependecys.ViewDataContext="{x:Type vm:ImageViewModel}" />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>

                    <mah:HamburgerMenuIconItem Label="{dp:LangBind DefaultText=设备,LangKey=MenuDeviceLabel}"
                                               TargetPageType="{x:Type UserControl}">
                        <mah:HamburgerMenuIconItem.Icon>
                            <TextBlock Text="{StaticResource Camera}"
                                       FontFamily="{StaticResource DefaultIconFont}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding ElementName=RunSettingView,Path=DataContext.ControlVisible,Converter={StaticResource BooleanToVisibilityConverter}}" />

                        </mah:HamburgerMenuIconItem.Icon>

                        <mah:HamburgerMenuIconItem.Tag>
                            <views:DeivceView userHelper:MetroHamburgerMenuDependecys.ViewDataContext="{x:Type vm:DeviceViewModel}" />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>

                    <mah:HamburgerMenuIconItem Label="{dp:LangBind DefaultText=加载框,LangKey=MenuLoadingLabel}"
                                               TargetPageType="{x:Type UserControl}">
                        <mah:HamburgerMenuIconItem.Icon>
                            <TextBlock Text="{StaticResource LED}"
                                       FontFamily="{StaticResource DefaultIconFont}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding ElementName=RunSettingView,Path=DataContext.ControlVisible,Converter={StaticResource BooleanToVisibilityConverter}}" />

                        </mah:HamburgerMenuIconItem.Icon>

                        <mah:HamburgerMenuIconItem.Tag>
                            <views:CustomDialogView userHelper:MetroHamburgerMenuDependecys.ViewDataContext="{x:Type vm:CustomViewModel}" />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>

                    <mah:HamburgerMenuIconItem Label="{dp:LangBind DefaultText=加载框,LangKey=MenuLoadingLabel}"
                                               TargetPageType="{x:Type UserControl}">
                        <mah:HamburgerMenuIconItem.Icon>
                            <TextBlock Text="{StaticResource RemoteHadle}"
                                       FontFamily="{StaticResource DefaultIconFont}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding ElementName=RunSettingView,Path=DataContext.ControlVisible,Converter={StaticResource BooleanToVisibilityConverter}}" />

                        </mah:HamburgerMenuIconItem.Icon>

                        <mah:HamburgerMenuIconItem.Tag>
                            <views:AutoCreateView userHelper:MetroHamburgerMenuDependecys.ViewDataContext="{x:Type vm:AutoCreateViewModel}" />
                        </mah:HamburgerMenuIconItem.Tag>
                    </mah:HamburgerMenuIconItem>

                </mah:HamburgerMenuItemCollection>
            </mah:HamburgerMenu.ItemsSource>

            <!--  Content  -->
            <mah:HamburgerMenu.ContentTemplate>
                <DataTemplate>
                    <Grid x:Name="ContentGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="48" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Margin="-1 0 -1 0"
                                Background="#444">
                            <TextBlock x:Name="Header"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="24"
                                       Foreground="White"
                                       Text="{Binding Label}" />
                        </Border>
                        <mah:TransitioningContentControl Grid.Row="1"
                                                         Content="{Binding}"
                                                         RestartTransitionOnContentChange="False"
                                                         Transition="Default">

                            <mah:TransitioningContentControl.Resources>

                                <DataTemplate DataType="{x:Type mah:HamburgerMenuIconItem}">
                                    <ContentControl  Focusable="True"
                                                     IsTabStop="False"
                                                     Content="{Binding Tag,Mode=TwoWay}"
                                                     Margin="5 0">

                                    </ContentControl>
                                </DataTemplate>
                            </mah:TransitioningContentControl.Resources>

                        </mah:TransitioningContentControl>
                    </Grid>
                </DataTemplate>
            </mah:HamburgerMenu.ContentTemplate>
        </mah:HamburgerMenu>

        <GridSplitter Grid.Row="1"
                      Height="2"
                      Background="Red"
                      HorizontalAlignment="Stretch" />

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal"
                        Grid.Row="0"
                        Grid.ColumnSpan="3"
                        Margin="5 0">
                <mah:ToggleSwitch x:Name="InfoToggle"
                                  Content="{dp:LangBind DefaultText=一般日志,LangKey=MenuLogInfoLabel}"
                                  IsOn="True"
                                  Cursor="Hand"/>

                <mah:ToggleSwitch x:Name="WaringToggle"
                                  Content="{dp:LangBind DefaultText=警告日志,LangKey=MenuWarnLabel}"
                                  IsOn="True"
                                  Cursor="Hand"
                                  Margin="-30"/>

                <mah:ToggleSwitch  x:Name="ErrorToggle"
                                   Content="{dp:LangBind DefaultText=错误日志,LangKey=MenuErrorLabel}"
                                   IsOn="True"
                                   Cursor="Hand"
                                   Background="Red" />

                <TextBlock Text="{dp:LangBind DefaultText=日志数量,LangKey=MenuLogNumLabel}"
                           VerticalAlignment="Center" />
                <mah:NumericUpDown Value="{Binding LogNums,StringFormat={}{0:D}}"
                                   Maximum="1000"
                                   Minimum="10"
                                   VerticalAlignment="Center" />

                <TextBlock Text="{dp:LangBind DefaultText=字体大小,LangKey=MenuLogFontSizeLabel}"
                           VerticalAlignment="Center"
                           Margin="5" />
                <mah:NumericUpDown Value="{Binding LogFontSize}"
                                   Minimum="9"
                                   Maximum="30"
                                   VerticalAlignment="Center" />

                <Button Content="{dp:LangBind DefaultText=清除,LangKey=MenuClearLogsLabel}"
                        Margin="5"
                        Command="{Binding ClearLogCommand}"
                        CommandParameter="{Binding ElementName=Par}"
                        FontSize="14">

                </Button>

            </StackPanel>

            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto"
                          CanContentScroll="True"
                          Grid.Row="1"
                          Grid.ColumnSpan="3"
                          dp:ScrollViewerExtensions.AlwaysScrollToEnd="True">

                <RichTextBox  IsReadOnly="True">

                    <FlowDocument  mah:VisibilityHelper.IsVisible="True"
                                   PageWidth="{Binding RelativeSource={RelativeSource AncestorType=RichTextBox,Mode=FindAncestor},Path=ActualWidth}">
                        <Paragraph mah:VisibilityHelper.IsVisible="True"
                                   x:Name="Par"
                                   dp:ParagrahDependency.MaxLineCount="{Binding LogNums}"
                                   dp:ParagrahDependency.Lines="{Binding Lines}"
                                   dp:ParagrahDependency.ErrorForeground="Red"
                                   dp:ParagrahDependency.WaringForeground="DarkOrange"
                                   dp:ParagrahDependency.InfoVisible="{Binding ElementName=InfoToggle,Path=IsOn,Mode=TwoWay}"
                                   dp:ParagrahDependency.WaringVisible="{Binding ElementName=WaringToggle,Path=IsOn,Mode=TwoWay}"
                                   dp:ParagrahDependency.ErroVisible="{Binding ElementName=ErrorToggle,Path=IsOn,Mode=TwoWay}"
                                   dp:ParagrahDependency.DebugVisible="False"
                                   dp:ParagrahDependency.FailVisible="False"
                                   FontSize="{Binding LogFontSize}">

                        </Paragraph>

                    </FlowDocument>

                </RichTextBox>
            </ScrollViewer>

        </Grid>
    </Grid>
</mah:MetroWindow>
